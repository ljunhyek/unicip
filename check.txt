1) 즉시 해결 패치
(A) Gemfile에서 logger Gem 제거

표준 라이브러리로 충분합니다. Gem은 불필요(오히려 충돌 유발).

# Gemfile
- gem "logger", "1.5"


변경 후:

bundle install
# (로컬에서 커밋/푸시 → Render가 자동 배포)

(B) 표준 라이브러리 logger를 가장 먼저 require

Rails 부팅 체인에서 가장 이른 시점인 config/boot.rb 상단에 추가하는 게 안전합니다.

# config/boot.rb
+ require "logger"   # 표준 라이브러리 선제 로드 (ActiveSupport가 logger 참조하기 전에)
require "bundler/setup"
require "bootsnap/setup" if ENV["RAILS_DISABLE_BOOTSNAP"] != "1"


참고: config/application.rb에 넣어도 되지만, 초기 의존 순서 문제가 남아있을 수 있어 boot.rb가 더 안전합니다.

(C) Rails 6.1 + Ruby 3.1 조합 유지

Rails 6.1.7.x는 Ruby 3.1 지원합니다. 버전 자체는 OK.

굳이 다운그레이드/업그레이드(예: Rails 7) 없이 위 두 조치(A,B) 만으로 정상화되는 케이스가 대부분입니다.

2) Render 빌드/런 명령 확인

Render 대시보드 → Service → Settings에서 다음처럼 설정하세요.

Build Command (예: Sprockets/Asset Pipeline 기준)

bundle install
bundle exec rails assets:precompile
bundle exec rails db:migrate


Start Command

bundle exec puma -C config/puma.rb


만약 Webpacker를 쓰는 Rails 6.1 프로젝트라면 Node/Yarn이 필요합니다. 이 경우 Render의 “Build Command”에 yarn install을 선행해 주세요.

yarn install --frozen-lockfile || yarn install
bundle install
RAILS_ENV=production bundle exec rails assets:precompile
bundle exec rails db:migrate

3) 환경변수(ENV) 체크리스트

RAILS_MASTER_KEY: 필수 (로컬 config/master.key 값)

DATABASE_URL: Render Managed Postgres 연결 문자열

KIPRIS_SERVICE_KEY: 원본 문자열 그대로(/와 = 포함, 이중 인코딩 금지)

(선택) RAILS_LOG_TO_STDOUT=true (플랫폼 로그 보기 쉬움)

(선택) 메일러 키(SendGrid 등)

주의: KIPRIS_SERVICE_KEY는 URL 파라미터로 그대로 붙여 사용하세요(자동 인코딩 금지). 서버사이드에서만 호출.

4) 배포 실패가 계속될 때 추가 점검

초기화 코드에서 Logger 참조 여부

커스텀 initializer에서 Logger를 바로 쓰면, require "logger" 전에 실행될 수 있습니다. 가능하면 Rails.logger를 사용하거나, 해당 파일 상단에 require "logger"를 넣으세요.

Gemfile.lock 정합성

로컬과 Render의 Ruby/OS에 따라 native extension 빌드 에러가 나면 실패합니다. bundle lock --add-platform x86_64-linux 후 커밋해주는 방법도 있습니다.

Puma 설정

config/puma.rb에서 포트/쓰레드/워크 설정이 Render 환경과 맞는지 확인(기본값이면 보통 문제 없음).

Webpacker/Node 이슈 (Rails 6.1 한정)

Webpacker 사용 시 Node 16/18, Yarn 버전 불일치로 자주 실패합니다. 빌드 로그에 Node/Yarn 에러가 보이면 위의 Build Command에 yarn install 추가.

5) 요약 & 다음 액션

원인: ActiveSupport가 Logger를 참조할 때, 표준 logger가 미로드 → NameError

해야 할 일:

Gemfile에서 logger Gem 제거

config/boot.rb 최상단에 require "logger" 추가

Render Build/Start Command 점검 및 필요한 경우 yarn install 선행

ENV (RAILS_MASTER_KEY, DATABASE_URL, KIPRIS_SERVICE_KEY) 확인

이대로 커밋/푸시하면 Render가 자동 재배포합니다.
새 로그에 다른 에러가 나오면 그 로그만 붙여 주세요. 거기서 바로 다음 수정 포인트 짚어드릴게요.